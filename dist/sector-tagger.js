!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.SectorTagger=e():t.SectorTagger=e()}(this,(()=>(()=>{"use strict";var t={159:(t,e,i)=>{i.d(e,{A:()=>r});var n=i(601),s=i.n(n),o=i(314),a=i.n(o)()(s());a.push([t.id,"#floating-window form {\n    margin-bottom: 10px;\n}\n\n#overlay, #grid-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n}\n\n#coordinate-tooltip {\n    position: absolute;\n    background-color: rgba(0, 0, 0, 0.7);\n    color: #fff;\n    padding: 3px 5px;\n    border-radius: 3px;\n    font-size: 12px;\n    pointer-events: none;\n    display: none;\n    z-index: 10;\n    max-width: 200px;\n}\n\n#sector-list {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n}\n\n#sector-list li {\n    padding: 5px;\n    cursor: pointer;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    border-bottom: 1px solid #ccc;\n}\n\n#sector-list li:hover,\n#sector-list li.highlight {\n    background-color: #f0f0f0;\n}\n#sector-list li.selected {\n    border-bottom: 1px solid gray;\n}\n\n.delete-button {\n    background-color: #ff4d4d;\n    border: none;\n    color: white;\n    padding: 3px 6px;\n    border-radius: 3px;\n    cursor: pointer;\n    margin-left: auto;\n}\n\n.delete-button:hover {\n    background-color: #ff1a1a;\n}\n\n\n#sector-table tr{\n    vertical-align: middle;\n}\n\n#sector-table tr.highlight{\n    transition: 0.2s all;\n    box-shadow: 5px -5px 20px 9px #8d8d8d6e;\n    border-top-left-radius: 5px;\n    border-bottom-left-radius: 5px;\n}\n\n/* Styles for the sector dialog */\n#sector-dialog {\n    display: none;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: rgb(247, 247, 247);\n    box-shadow: rgb(133 132 132 / 77%) 4px -6px 20px 7px;\n    padding: 20px;\n    z-index: 3;\n}\n\n#sector-dialog h4 {\n    margin-top: 0;\n}\n\n.sector-tags {\n    font-size: 80%;\n    display: flex;\n    max-width: 130px;\n    overflow: auto;\n    padding: 5px;\n}\n\n.sector-tag {\n    background-color: #e0e0e0;\n    color: #333;\n    border-radius: 3px;\n    padding: 2px 5px;\n    margin: 2px;\n    font-size: 12px;\n}\n\n#tag-filter-input {\n    width: 90%;\n    margin-bottom: 10px;\n}\n\n\n#drawingCharacteristicsLabel{\n    border-collapse: collapse;\n    height: 30px;\n}\n\n#drawingCharacteristicsLabel .characteristicsLabel{\n    font-style:italic;\n    padding: 0;\n}\n\n#drawingCharacteristicsLabel .characteristicsLegend{\n    display: inline-block;\n    border: 1px solid lightgray;\n    padding: 0;\n    height:15px;\n    width: 15px;\n    margin-left: 10px;\n}\n\n#rightDrawingPanel {\n    position: fixed;\n    width: 600px;\n    right: 0;\n    box-shadow: rgb(133 132 132 / 77%) 4px -6px 20px 7px;\n    background: rgb(247, 247, 247);\n    top: 80px;\n    z-index: 777;\n    transition: 0.4s all;\n    padding: 0;\n    margin: 0;\n    max-height: 820px;\n    overflow: auto;\n}\n\n#rightDrawingPanel.hidden {\n    right: -570px;\n}\n\n#rightDrawingPanel .panel-header {\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 1px solid gray;\n    padding: 5px;\n}\n\n#rightDrawingPanel.hidden > .cart-content,\n#rightDrawingPanel.hidden .card-footer {\n    display: none;\n}\n\n.quota-table-row > td{\n    line-height: 25px !important;\n    padding: 2px 6px !important;\n}\n\n#drawingWrapper {\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    height: calc(100vh - 145px)\n}",""]);const r=a},314:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var i="",n=void 0!==e[5];return e[4]&&(i+="@supports (".concat(e[4],") {")),e[2]&&(i+="@media ".concat(e[2]," {")),n&&(i+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),i+=t(e),n&&(i+="}"),e[2]&&(i+="}"),e[4]&&(i+="}"),i})).join("")},e.i=function(t,i,n,s,o){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(n)for(var r=0;r<this.length;r++){var l=this[r][0];null!=l&&(a[l]=!0)}for(var c=0;c<t.length;c++){var h=[].concat(t[c]);n&&a[h[0]]||(void 0!==o&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=o),i&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=i):h[2]=i),s&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=s):h[4]="".concat(s)),e.push(h))}},e}},601:t=>{t.exports=function(t){return t[1]}},72:t=>{var e=[];function i(t){for(var i=-1,n=0;n<e.length;n++)if(e[n].identifier===t){i=n;break}return i}function n(t,n){for(var o={},a=[],r=0;r<t.length;r++){var l=t[r],c=n.base?l[0]+n.base:l[0],h=o[c]||0,d="".concat(c," ").concat(h);o[c]=h+1;var g=i(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==g)e[g].references++,e[g].updater(p);else{var u=s(p,n);n.byIndex=r,e.splice(r,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function s(t,e){var i=e.domAPI(e);return i.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;i.update(t=e)}else i.remove()}}t.exports=function(t,s){var o=n(t=t||[],s=s||{});return function(t){t=t||[];for(var a=0;a<o.length;a++){var r=i(o[a]);e[r].references--}for(var l=n(t,s),c=0;c<o.length;c++){var h=i(o[c]);0===e[h].references&&(e[h].updater(),e.splice(h,1))}o=l}}},659:t=>{var e={};t.exports=function(t,i){var n=function(t){if(void 0===e[t]){var i=document.querySelector(t);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(i)}},540:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},56:(t,e,i)=>{t.exports=function(t){var e=i.nc;e&&t.setAttribute("nonce",e)}},825:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(i){!function(t,e,i){var n="";i.supports&&(n+="@supports (".concat(i.supports,") {")),i.media&&(n+="@media ".concat(i.media," {"));var s=void 0!==i.layer;s&&(n+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),n+=i.css,s&&(n+="}"),i.media&&(n+="}"),i.supports&&(n+="}");var o=i.sourceMap;o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(n,t,e.options)}(e,t,i)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},113:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function i(n){var s=e[n];if(void 0!==s)return s.exports;var o=e[n]={id:n,exports:{}};return t[n](o,o.exports,i),o.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.nc=void 0;var n={};i.r(n),i.d(n,{SectorTaggerApp:()=>u});class s{constructor(t,e,i){this.canvas=document.createElement("canvas"),this.canvas.style.position="absolute",this.canvas.style.top="0",this.canvas.style.left="0",this.canvas.width=e,this.canvas.height=i,this.ctx=this.canvas.getContext("2d"),t.appendChild(this.canvas)}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}drawSectors(t,e,i,n){t.forEach((t=>{this.ctx.save(),this.ctx.translate(e,i),this.ctx.scale(n,n),t.draw(this.ctx,n),this.ctx.restore()}))}drawImage(t,e,i,n){this.ctx.drawImage(t,e,i,t.width*n,t.height*n)}}class o{constructor(t,e,i){this.canvas=document.createElement("canvas"),this.canvas.style.position="absolute",this.canvas.style.top="0",this.canvas.style.left="0",this.canvas.width=e,this.canvas.height=i,this.ctx=this.canvas.getContext("2d"),t.appendChild(this.canvas)}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}drawCurrentShape(t){if(t.isSelecting||t.isDrawingPolygon){if(this.ctx.save(),this.ctx.translate(t.originX,t.originY),this.ctx.scale(t.scale,t.scale),this.ctx.strokeStyle="rgba(0, 255, 0, 1)",this.ctx.lineWidth=1/t.scale,"rectangle"===t.drawingMode&&t.isSelecting)this.ctx.strokeRect(t.selectionRect.x,t.selectionRect.y,t.selectionRect.width,t.selectionRect.height);else if("circle"===t.drawingMode&&t.isSelecting){const e=Math.sqrt(Math.pow(t.selectionRect.width,2)+Math.pow(t.selectionRect.height,2));this.ctx.beginPath(),this.ctx.arc(t.selectionStartX,t.selectionStartY,e,0,2*Math.PI),this.ctx.stroke()}else"polygon"===t.drawingMode&&t.isDrawingPolygon&&t.polygonPoints.length>0&&(this.ctx.beginPath(),this.ctx.moveTo(t.polygonPoints[0].x,t.polygonPoints[0].y),t.polygonPoints.slice(1).forEach((t=>{this.ctx.lineTo(t.x,t.y)})),t.polygonPoints.length>1&&this.ctx.lineTo((t.lastMouseX-t.originX)/t.scale,(t.lastMouseY-t.originY)/t.scale),this.ctx.stroke());this.ctx.restore()}}drawSectorHighlights(t,e,i,n){t.forEach((t=>{(t.hover||t.selected)&&(this.ctx.save(),this.ctx.translate(e,i),this.ctx.scale(n,n),this.ctx.strokeStyle=t.hover?"yellow":"red",this.ctx.lineWidth=2/n,t.drawStroke(this.ctx,n),this.ctx.restore())}))}}class a{constructor({type:t,id:e,name:i,color:n,x:s,y:o,width:a,height:r,tags:l,inCart:c}){this.type=t,this.id=e,this.name=i,this.color=n,this.x=s,this.y=o,this.width=a,this.height=r,this.tags=l||[],this.inCart=c||!1,this.hover=!1,this.selected=!1}draw(t,e){this.drawFill(t,e),this.drawStroke(t,e)}drawFill(t,e){t.fillStyle=this.color,t.fill()}drawStroke(t,e){t.stroke()}containsPoint(t,e){}adjustAlpha(t,e){!function(t){7!==t.length||(parseInt(t.slice(1,3),16),parseInt(t.slice(3,5),16),parseInt(t.slice(5,7),16))}(t)}onClick(t){console.log("Sector clicked")}}class r extends a{constructor(t){super(t),this.type="rectangle"}drawFill(t,e){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.width,this.height)}drawStroke(t,e){t.strokeRect(this.x,this.y,this.width,this.height)}containsPoint(t,e){return t>=this.x&&t<=this.x+this.width&&e>=this.y&&e<=this.y+this.height}move(t,e){this.x+=t,this.y+=e}}class l extends a{constructor({id:t,name:e,color:i,centerX:n,centerY:s,radius:o,tags:a,inCart:r}){super({id:t,name:e,color:i,x:n-o,y:s-o,width:2*o,height:2*o,tags:a,inCart:r}),this.centerX=n,this.centerY=s,this.radius=o,this.type="circle"}drawFill(t,e){t.fillStyle=this.color,t.beginPath(),t.arc(this.centerX,this.centerY,this.radius,0,2*Math.PI),t.fill()}drawStroke(t,e){t.beginPath(),t.arc(this.centerX,this.centerY,this.radius,0,2*Math.PI),t.stroke()}containsPoint(t,e){const i=t-this.centerX,n=e-this.centerY;return i*i+n*n<=this.radius*this.radius}move(t,e){this.centerX+=t,this.centerY+=e,this.x=this.centerX-this.radius,this.y=this.centerY-this.radius}}class c extends a{constructor({id:t,name:e,color:i,points:n,tags:s,inCart:o}){super({id:t,name:e,color:i,tags:s,inCart:o}),this.points=n.map((t=>({x:parseFloat(t.x),y:parseFloat(t.y)}))),this.type="polygon"}draw(t,e){this.points.length<3||(t.fillStyle=this.adjustAlpha(this.color,.3),t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y),this.points.slice(1).forEach((e=>t.lineTo(e.x,e.y))),t.closePath(),t.fill(),this.selected&&this.drawSelection(t,e),this.hover&&(t.strokeStyle="rgba(0, 0, 255, 1)",t.lineWidth=3/e,t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y),this.points.slice(1).forEach((e=>t.lineTo(e.x,e.y))),t.closePath(),t.stroke()))}containsPoint(t,e){let i=!1;const n=this.points;for(let s=0,o=n.length-1;s<n.length;o=s++){const a=n[s].x,r=n[s].y,l=n[o].x,c=n[o].y;r>e!=c>e&&t<(l-a)*(e-r)/(c-r)+a&&(i=!i)}return i}drawSelection(t,e){t.strokeStyle="rgba(255, 0, 0, 0.7)",t.lineWidth=3/e,t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y),this.points.slice(1).forEach((e=>t.lineTo(e.x,e.y))),t.closePath(),t.stroke()}move(t,e){this.points=this.points.map((i=>({x:i.x+t,y:i.y+e}))),this.x+=t,this.y+=e}}const h=class{constructor(t){this.app=t,this.createDialogElements(),this.addEventListeners()}createDialogElements(){this.dialog=document.createElement("div"),this.dialog.id="sector-dialog",this.dialog.innerHTML='\n        <div id="sector-dialog-title">Add/Edit Sector</div>\n        <form id="sector-dialog-form">\n          <div>\n            <label>Name: </label>\n            <input type="text" id="dialog-sector-name">\n          </div>\n          <div>\n            <label>Color: </label>\n            <input type="color" id="dialog-sector-color" value="#ffff00">\n          </div>\n          <div>\n            <label>Tags: </label>\n            <input type="text" id="dialog-sector-tags" placeholder="Comma-separated">\n          </div>\n          <hr>\n          <div>\n            <button type="button" id="dialog-cancel-button">Cancel</button>\n            <button type="button" id="dialog-save-sector-button">Save Sector</button>\n          </div>\n        </form>\n      ',document.body.appendChild(this.dialog),this.dialog.style.display="none"}addEventListeners(){document.getElementById("dialog-save-sector-button").addEventListener("click",(()=>this.saveSector())),document.getElementById("dialog-cancel-button").addEventListener("click",(()=>this.close()))}open(t){this.editingSector=t||null;const e=document.getElementById("sector-dialog-title"),i=document.getElementById("dialog-sector-name"),n=document.getElementById("dialog-sector-color"),s=document.getElementById("dialog-sector-tags");t?(e.textContent="Edit Sector",i.value=t.name,n.value=t.color.slice(0,7),s.value=t.tags.join(", ")):(e.textContent="Add Sector",i.value="",n.value="#ffff00",s.value=""),this.dialog.style.display="block"}close(){this.dialog.style.display="none"}hide(){this.close()}saveSector(){const t=document.getElementById("dialog-sector-name").value,e=document.getElementById("dialog-sector-color").value+"80",i=document.getElementById("dialog-sector-tags").value.split(",").map((t=>t.trim())).filter((t=>t.length>0));if(this.editingSector)this.editingSector.name=t,this.editingSector.color=e,this.editingSector.tags=i;else{const n=new Rectangle({name:t,color:e,x:this.app.selectionRect.x,y:this.app.selectionRect.y,width:this.app.selectionRect.width,height:this.app.selectionRect.height,tags:i});this.app.sectors.push(n)}this.close(),this.app.draw(),this.app.rightPanel.updateSectorList(),console.log(this.app.sectors)}},d=class{constructor(t){this.app=t,this.createPanelElements(),this.addEventListeners(),this.sectorTable=this.panel.querySelector("#sector-table")}createPanelElements(){this.panel=document.createElement("div"),this.panel.id="rightDrawingPanel",this.panel.innerHTML='\n        <div>\n          <div class="panel-header">\n            <button id="charsBillPlToggleButton" title="Hide panel">\n            👁️\n            </button>\n            &nbsp; &nbsp;\n            Sectors\n            <hr>\n          </div>\n          <div>\n            \x3c!-- Panel content --\x3e\n            <div style="display: flex; flex-direction: column; gap: 10px; padding: 5px;">\n              <div>\n                <small>Upload Image: </small> \n                <input type="file" id="upload-image-input" accept="image/*">\n              </div>\n              <div>\n                <small>Upload JSON: </small> \n                <input type="file" id="upload-json-input" accept=".json">\n              </div>\n              <div>\n                <small>Export JSON: </small> \n                <input type="button" id="export-json-button" value="Export">\n              </div>\n              <div>\n                <p>Filter by tag:</p> \n                <input type="text" id="tag-filter-input" placeholder="Enter a tag to filter">\n              </div>\n            </div>\n            <hr>\n            <table id="sector-table">\n              <thead>\n                <tr>\n                  <th>Select</th>\n                  <th>Name</th>\n                  <th>Tags</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody></tbody>\n            </table>\n          </div>\n        </div>\n      ',document.body.appendChild(this.panel)}addEventListeners(){document.getElementById("charsBillPlToggleButton").addEventListener("click",(()=>this.togglePanel())),document.getElementById("tag-filter-input").addEventListener("input",(()=>this.updateSectorList())),document.getElementById("upload-image-input").addEventListener("change",(t=>this.app.handleImageUpload(t))),document.getElementById("upload-json-input").addEventListener("change",(t=>this.app.handleJSONUpload(t))),document.getElementById("export-json-button").addEventListener("click",(()=>this.app.exportData()))}togglePanel(){this.panel.classList.contains("hidden")?this.panel.classList.remove("hidden"):this.panel.classList.add("hidden")}updateSectorList(){const t=this.panel.querySelector("#sector-table tbody");t.innerHTML="";const e=document.getElementById("tag-filter-input").value.trim().toLowerCase();this.app.sectors.forEach((i=>{if(""===e||i.tags.map((t=>t.toLowerCase())).includes(e)){const e=document.createElement("tr");e.innerHTML=`\n            <td><input type="checkbox" class="sector-select"></td>\n            <td>${i.name}</td>\n            <td>${i.tags.join(", ")}</td>\n            <td>\n              <button class="edit-button">Edit</button>\n              <button class="delete-button">Delete</button>\n            </td>\n          `,t.appendChild(e),e.querySelector(".edit-button").addEventListener("click",(()=>this.app.sectorDialog.open(i))),e.querySelector(".delete-button").addEventListener("click",(()=>this.deleteSector(i))),e.querySelector(".sector-select").addEventListener("change",(t=>{i.selected=t.target.checked,this.app.draw()}))}}))}deleteSector(t){const e=this.app.sectors.indexOf(t);e>-1&&(this.app.sectors.splice(e,1),this.updateSectorList(),this.app.draw())}};class g{constructor(t){this.app=t,this.tooltip=document.createElement("div"),this.tooltip.classList.add("coordinate-tooltip"),this.tooltip.style.position="absolute",this.tooltip.style.display="none",this.tooltip.style.backgroundColor="rgba(0, 0, 0, 0.8)",this.tooltip.style.color="white",this.tooltip.style.padding="5px",this.tooltip.style.borderRadius="5px",this.tooltip.style.pointerEvents="none",this.app.container.appendChild(this.tooltip)}show(t,e,i){this.tooltip.textContent=i,this.tooltip.style.left=`${t}px`,this.tooltip.style.top=`${e}px`,this.tooltip.style.display="block"}hide(){this.tooltip.style.display="none"}}class p{constructor(t){this.app=t,this.shapeSelector=null,this.createShapeSelector(),this.addEventListeners()}createShapeSelector(){const t=document.createElement("div");t.classList.add("shape-selector"),t.style.position="absolute",t.style.top="10px",t.style.left="10px",t.style.zIndex="1000",t.style.background="rgba(0, 0, 0, 0.5)",t.style.border="1px solid #000",t.style.borderRadius="5px",t.style.padding="5px",t.innerHTML='\n            <button id="rectangle-button" title="Rectangle" data-shape="rectangle">\n                <i class="i-square"></i> Rectangle\n            </button>\n            <button id="circle-button" title="Circle" data-shape="circle">\n                <i class="i-circle"></i> Circle\n            </button>\n            <button id="polygon-button" title="Polygon" data-shape="polygon">\n                <i class="i-polygon"></i> Polygon\n            </button>\n        ',this.app.container.appendChild(t),this.shapeSelector=t}addEventListeners(){this.shapeSelector.querySelectorAll("button").forEach((t=>{t.addEventListener("click",(()=>{this.selectShape(t.dataset.shape)}))}))}selectShape(t){this.app.setDrawingMode(t)}show(){this.shapeSelector.style.display="block"}hide(){this.shapeSelector.style.display="none"}}class u{constructor(t,e,i,n,a){this.container=t,this.appId=e,this.sectorRowMap=new Map,this.image=new Image,this.imageLoaded=!1,this.scale=1,this.originX=0,this.originY=0,this.startX=0,this.startY=0,this.isPanning=!1,this.isSelecting=!1,this.selectionStartX=0,this.selectionStartY=0,this.selectionRect={},this.sectors=[],this.gridSettings=null,this.editingSector=null,this.isCtrlPressed=!1,this.isHoveringOverSector=!1,this.isDraggingSector=!1,this.draggingSector=null,this.dragStartX=0,this.dragStartY=0,this.fetchImgUrl=i,this.fetchSectorsUrl=n,this.onAddToCartCallback=a,this.drawingMode="circle",this.isDrawingPolygon=!1,this.polygonPoints=[],this.mainCanvas=new s(this.container,this.container.clientWidth,this.container.clientHeight),this.overlayCanvas=new o(this.container,this.container.clientWidth,this.container.clientHeight),this.sectorDialog=new h(this),this.rightPanel=new d(this),this.sectorTable=this.rightPanel.sectorTable,this.coordinateTooltip=new g(this),this.drawingShapeSelector=new p(this),this.initEventListeners(),this.initKeyboardShortcuts()}initEventListeners(){this.overlayCanvas.canvas.addEventListener("mousedown",(t=>this.onMouseDown(t))),this.overlayCanvas.canvas.addEventListener("mousemove",(t=>this.onMouseMove(t))),this.overlayCanvas.canvas.addEventListener("mouseup",(t=>this.onMouseUp(t))),this.overlayCanvas.canvas.addEventListener("click",(t=>this.onClick(t))),this.overlayCanvas.canvas.addEventListener("wheel",(t=>this.onWheel(t))),window.addEventListener("keydown",(t=>this.onKeyDown(t))),window.addEventListener("keyup",(t=>this.onKeyUp(t)))}initKeyboardShortcuts(){document.addEventListener("keydown",(t=>{"Escape"===t.key&&this.sectorDialog.hide()}))}setDrawingMode(t){this.drawingMode=t}draw(){this.mainCanvas.clear(),this.imageLoaded&&this.mainCanvas.drawImage(this.image,this.originX,this.originY,this.scale),this.mainCanvas.drawSectors(this.sectors,this.originX,this.originY,this.scale),this.overlayCanvas.clear(),this.overlayCanvas.drawCurrentShape(this),this.overlayCanvas.drawSectorHighlights(this.sectors,this.originX,this.originY,this.scale)}deleteSector(t){this.sectors=this.sectors.filter((e=>e.id!==t));const e=this.sectorRowMap.get(t);e&&(e.remove(),this.sectorRowMap.delete(t)),this.draw()}focusOnSector(t){const e=this.mainCanvas.canvas.width,i=this.mainCanvas.canvas.height,n=(e-500)/t.width,s=(i-500)/t.height,o=Math.min(n,s);this.scale=Math.min(Math.max(o,.1),10);const a=t.x+t.width/2,r=t.y+t.height/2,l=this.mainCanvas.canvas.width/2,c=this.mainCanvas.canvas.height/2;this.originX=l-LEFT_OFFSET-a*this.scale,this.originY=c-TOP_OFFSET-r*this.scale,this.draw()}toggleGrid(){if(!this.imageLoaded)return void alert("Please upload an image first.");const t=parseFloat(this.gridCellWidthInput.value),e=parseFloat(this.gridCellHeightInput.value);if(!isNaN(t)&&!isNaN(e))return this.gridSettings&&t==this.gridSettings.cellWidth&&e==this.gridSettings.cellHeight?(this.gridSettings=null,void this.draw()):void(t>10&&e>10?(this.gridSettings={cellWidth:t,cellHeight:e},this.draw()):alert("Cell width and height must be greater than 10 for performance reasons."));alert("Cell width and height must be numbers.")}handleImageUpload(t){const e=t.target.files[0];if(e){const t=new FileReader;t.onload=t=>{this.image=new Image,this.image.onload=()=>{this.imageLoaded=!0,this.originX=(this.mainCanvas.canvas.width-this.image.width*this.scale)/2,this.originY=(this.mainCanvas.canvas.height-this.image.height*this.scale)/2,this.draw()},this.image.src=t.target.result},t.readAsDataURL(e)}}handleJSONUpload(t){const e=t.target.files[0];if(e){const t=new FileReader;t.onload=t=>{const e=JSON.parse(t.target.result);this.sectors=[],(e.sectors||[]).forEach((t=>{let e;"rectangle"===t.type?e=new r(t):"circle"===t.type?e=new l(t):"polygon"===t.type&&(e=new c(t)),e&&this.sectors.push(e)})),this.rightPanel.updateSectorList(),this.gridSettings=e.gridSettings||null,this.gridSettings&&(this.gridCellWidthInput.value=this.gridSettings.cellWidth,this.gridCellHeightInput.value=this.gridSettings.cellHeight),this.draw()},t.readAsText(e)}}exportData(){const t={imageWidth:this.image?this.image.width:0,imageHeight:this.image?this.image.height:0,sectors:this.sectors,gridSettings:this.gridSettings},e=JSON.stringify(t,null,2),i=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(i),s=document.createElement("a");s.href=n,s.download="sector_data.json",document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(n)}onMouseDown(t){const e=this.overlayCanvas.canvas.getBoundingClientRect(),i=(t.clientX-e.left-this.originX)/this.scale,n=(t.clientY-e.top-this.originY)/this.scale;t.ctrlKey&&t.shiftKey&&1===t.which?(this.draggingSector=this.sectors.find((t=>t.containsPoint(i,n))),this.draggingSector&&(this.isDraggingSector=!0,this.dragStartX=i-this.draggingSector.x,this.dragStartY=n-this.draggingSector.y,this.updateCursor("move"))):t.ctrlKey&&1===t.which?"rectangle"===this.drawingMode||"circle"===this.drawingMode?(this.isSelecting=!0,this.selectionStartX=i,this.selectionStartY=n,this.selectionRect={x:this.selectionStartX,y:this.selectionStartY,width:0,height:0}):"polygon"===this.drawingMode&&(this.isDrawingPolygon?this.polygonPoints.push({x:i,y:n}):(this.isDrawingPolygon=!0,this.polygonPoints=[{x:i,y:n}])):1===t.which&&(this.isPanning=!0,this.startX=t.clientX-this.originX,this.startY=t.clientY-this.originY,this.updateCursor("grabbing"))}onMouseMove(t){const e=this.overlayCanvas.canvas.getBoundingClientRect(),i=(t.clientX-e.left-this.originX)/this.scale,n=(t.clientY-e.top-this.originY)/this.scale;if(this.lastMouseX=t.clientX,this.lastMouseY=t.clientY,this.isDraggingSector)this.draggingSector.move(i-this.dragStartX-this.draggingSector.x,n-this.dragStartY-this.draggingSector.y),this.dragStartX=i-this.draggingSector.x,this.dragStartY=n-this.draggingSector.y,this.draw();else if(this.isSelecting){const t=i,e=n;this.selectionRect.width=t-this.selectionStartX,this.selectionRect.height=e-this.selectionStartY,this.draw()}else if(this.isDrawingPolygon&&"polygon"===this.drawingMode)this.draw();else if(this.isPanning)this.originX=t.clientX-this.startX,this.originY=t.clientY-this.startY,this.draw();else{let e=!1;this.sectors.forEach((s=>{if(s.containsPoint(i,n)){s.hover=!0,e=!0;let i=`<strong>${s.name}</strong><br>`;s.tags.length>0&&(i+="Tags: ",s.tags.forEach((t=>{i+=`<span class="sector-tag">${t}</span> `}))),this.coordinateTooltip.show(t.clientX,t.clientY,i)}else s.hover=!1})),e||this.coordinateTooltip.hide(),this.isHoveringOverSector=e,this.updateCursor(),this.draw()}}onMouseUp(t){if(this.isDraggingSector&&(this.isDraggingSector=!1,this.draggingSector=null,this.updateCursor()),this.isSelecting&&(this.isSelecting=!1,this.createSector()),this.isDrawingPolygon&&3===t.which){this.isDrawingPolygon=!1;const t=new c({name:`Sector ${this.sectors.length+1}`,color:"#ffff0080",points:this.polygonPoints,tags:[]});this.sectors.push(t),this.polygonPoints=[],this.draw()}this.isPanning=!1,this.coordinateTooltip.hide(),this.sectors.forEach((t=>t.hover=!1)),this.draw()}createSector(){let t;if("rectangle"===this.drawingMode)t=new r({id:Date.now(),name:`Sector ${this.sectors.length+1}`,color:"#ffff0080",x:this.selectionRect.x,y:this.selectionRect.y,width:this.selectionRect.width,height:this.selectionRect.height,tags:[]});else if("circle"===this.drawingMode){const e=Math.sqrt(Math.pow(this.selectionRect.width,2)+Math.pow(this.selectionRect.height,2));t=new l({id:Date.now(),name:`Sector ${this.sectors.length+1}`,color:"#ffff0080",centerX:this.selectionStartX,centerY:this.selectionStartY,radius:e,tags:[]})}else"polygon"===this.drawingMode&&(t=new c({id:Date.now(),name:`Sector ${this.sectors.length+1}`,color:"#ffff0080",points:this.polygonPoints,tags:[]}));t&&(this.sectors.push(t),this.rightPanel.updateSectorList(),this.draw(),this.editingSector=t,this.sectorDialog.open(t))}onClick(t){const e=this.overlayCanvas.canvas.getBoundingClientRect(),i=(t.clientX-e.left-this.originX)/this.scale,n=(t.clientY-e.top-this.originY)/this.scale,s=this.sectors.find((t=>t.containsPoint(i,n)));s&&(s.onClick(t),this.editingSector=s,this.sectorDialog.open(s))}onWheel(t){t.preventDefault();const e=t.deltaY<0?1.1:.9,i=this.scale*e;if(i<.1||i>10)return;const n=this.overlayCanvas.canvas.getBoundingClientRect(),s=t.clientX-n.left,o=t.clientY-n.top;this.originX=s-(s-this.originX)*(i/this.scale),this.originY=o-(o-this.originY)*(i/this.scale),this.scale=i,this.draw()}updateCursor(t=null){t?this.container.style.cursor=t:this.isDraggingSector?this.container.style.cursor="move":this.isCtrlPressed?this.container.style.cursor="crosshair":this.isHoveringOverSector?this.container.style.cursor="pointer":this.container.style.cursor="default"}onKeyDown(t){"Control"===t.key&&(this.isCtrlPressed=!0)}onKeyUp(t){"Control"===t.key&&(this.isCtrlPressed=!1)}saveSectorDialog(){this.editingSector&&(this.editingSector.name=this.sectorDialog.nameInput.value,this.editingSector.color=this.sectorDialog.colorInput.value+"80",this.editingSector.tags=this.sectorDialog.tagsInput.value.split(",").map((t=>t.trim())).filter((t=>t.length>0)),this.rightPanel.updateSectorList(),this.draw()),this.sectorDialog.hide(),this.editingSector=null}cancelSectorDialog(){this.sectorDialog.hide()}}var v=i(72),y=i.n(v),m=i(825),f=i.n(m),x=i(659),w=i.n(x),S=i(56),b=i.n(S),C=i(540),E=i.n(C),P=i(113),L=i.n(P),M=i(159),k={};return k.styleTagTransform=L(),k.setAttributes=b(),k.insert=w().bind(null,"head"),k.domAPI=f(),k.insertStyleElement=E(),y()(M.A,k),M.A&&M.A.locals&&M.A.locals,n})()));